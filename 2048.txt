
		控制台2048执行流程

1. 初始化地图		

// 这里需要一个死循环

2. 在随机位置添加一个随机为2或者4的数

	打印地图

3. 移动地图		移动方向上下左右

	打印地图

4. 成功与失败判断

// 判定满足条件后循环结束	

判断条件
	当地图中的无法添加元素的时候,判定游戏失败

	当最大元素到2048的时候,判定游戏过关

添加元素 
	数组有空位置
	
	添加元素	random

添加元素条件:

	数组中的元素进行了移动操作

	数组中还有可以添加元素的位置

移动(左)
	从第二个元素开始移动

	当这个元素不为0的时候,才移动

	1.如果元素左边为空(数组中的元素为0)
	
	将元素左移

	2.当元素左边有多个空位置时

	移动到左边不为空,或者左边到边界

	3.当元素左边的元素和自身相等时

	相加,并将值赋给左边的元素

	

判定: 地图中无法添加元素

	移动后,数组中没有为0的元素

判定: 过关条件

	移动后,数组中最大值 == 2048

地图: 二维数组或者一维数组都可以,这里使用二维数组

接收移动命令: Scanner	w a s d  代表 上 左 下 右

执行移动:
	switch()分支

获取随机位置:

	循环
	获取一个范围是[1,16]的随机数,
	当数组中的这个元素 == 0 的时候,跳出循环
	循环结束





